package app

import (
	"strings"
	"newser.app/internal/dto"
	"newser.app/view/component"
	"newser.app/view/layout"
	"github.com/PuerkitoBio/goquery"
)

// We're splitting the main page component
// from the content so we can send back
// the full page — Article — when the
// request is not an HTMX request.
// When we do get an HTMX request,
// we can just return the ArticlePageContent
// without the layout wrappers
templ Article(a *dto.ArticleDTO) {
	@layout.App() {
		@ArticlePageContent(a)
	}
}

func makeImagesAbsolute(content, baseUrl string) string {
	doc, err := goquery.NewDocumentFromReader(strings.NewReader(content))
	if err != nil {
		return content
	}

	doc.Find("img").Each(func(i int, s *goquery.Selection) {
		src, _ := s.Attr("src")
		if strings.HasPrefix(src, "/") {
			s.SetAttr("src", baseUrl+src)
		}
	})

	html, err := doc.Html()
	if err != nil {
		return content
	}

	return html
}

func getBaseUrl(url string) string {
	parts := strings.Split(url, "/")
	return parts[0] + "//" + parts[2]
}

templ ArticlePageContent(a *dto.ArticleDTO) {
	<script src="/static/script/vendor/shiki/shiki.js" type="module"></script>
	@component.ArticleHeader(a)
	<article class="container article stack">
		<div class="article-header flex-row gap-1">
			<h2>{ a.Title }</h2>
		</div>
		<div class="article-header flex-row gap-1">
			@component.FormattedDateTime(a.PublishedParsed)
			<a href={ templ.SafeURL(a.SiteURL) } target="_blank">
				{ a.FeedTitle }
			</a>
			// <a href={ templ.SafeURL(a.Link) } target="_blank">
			// 	Original Article
			// </a>
			// <a href={ templ.SafeURL(a.SiteURL) } target="_blank">{ a.Person.Name }</a>
		</div>
		<section class="article-content">
			if len(a.Content) > 0 {
				@templ.Raw(makeImagesAbsolute(a.Content, getBaseUrl(a.Link)))
			} else {
				@templ.Raw(a.Description)
			}
			<a href={ templ.SafeURL(a.Link) } target="_blank" class="flex-row flex-align-center text-small">
				Original Article
				<span class="flex-row flex-align-center">
					@component.Icon("external_link")
				</span>
			</a>
		</section>
	</article>
}
