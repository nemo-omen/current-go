package component

import (
	"newser.app/internal/dto"
	"newser.app/view/util"
	"slices"
)

func getIsCollapsed(ctx context.Context, articleId string) bool {
	var collapsedCards []string
	collapsedCards, ok := ctx.Value("collapsedCards").([]string)
	if !ok {
		return false
	}

	return slices.Contains(collapsedCards, articleId)
}

func getCollapsedString(ctx context.Context, articleId string) string {
	if getIsCollapsed(ctx, articleId) {
		return "false"
	}
	return "true"
}

templ ArticleCard(article *dto.ArticleDTO) {
	<li class={ "article-list-item", templ.KV("read", article.Read) } id={ "card-" + article.ID.String() }>
		<article class="card">
			<div class="card-header flex-column">
				<div class="flex-column gap-1">
					<div class="card-header-primary">
						<div class="flex-row gap-1 flex-align-center">
							if article.FeedImageURL != "" {
								<image class="feed-logo" src={ article.FeedImageURL } alt={ util.GetImgAlt(article.FeedImageTitle, article.FeedTitle) }></image>
							}
							<a href={ templ.SafeURL("/app/article/" + article.ID.String()) } class="card-link">
								<h3>{ article.Title }</h3>
							</a>
						</div>
					</div>
				</div>
			</div>
			<div class="card-body flex-column gap-1">
				<div class="flex-row gap-3">
					@FormattedDateTime(article.PublishedParsed)
					<span class="card-feed-link"><a href={ templ.SafeURL(article.SiteURL) } target="_blank">{ article.FeedTitle }</a></span>
				</div>
				<a href={ templ.SafeURL("/app/article/" + article.ID.String()) } class="card-link">
					@templ.Raw(article.Description)
				</a>
			</div>
			@CardFooter(article)
		</article>
	</li>
}

templ CardMenu(article *dto.ArticleDTO) {
	<ul class="card-menu flex-menu">
		<li class="tooltip-container">
			@SaveForm(article, true)
		</li>
		<li class="tooltip-container">
			@UnreadForm(article, true)
		</li>
	</ul>
}

templ CardFooter(article *dto.ArticleDTO) {
	<div
		id={ "card-footer-" + article.ID.String() }
		class="card-footer"
	>
		@CardMenu(article)
	</div>
}

templ CollapseForm(article *dto.ArticleDTO) {
	<form
		action="/app/control/setcollapse"
		method="POST"
		hx-post="/app/control/setcollapse"
		hx-target={ "closest #card-" + article.ID.String() }
		hx-swap="outerHTML"
		hx-push-url="false"
		class="card-header-toggle"
	>
		<input type="hidden" name="articleid" value={ article.ID.String() }/>
		<input id={ "collapse-input-" + article.ID.String() } type="hidden" name="shouldcollapse" value={ getCollapsedString(ctx, article.ID.String()) }/>
		<button class={ "card-collapse icon-link-button", templ.KV("rotate--90", !getIsCollapsed(ctx, article.ID.String())) } type="submit">
			@Icon("arrow_left")
		</button>
	</form>
}
