package component

import "strings"
import "newser.app/view/util"

func getCurrentPath(ctx context.Context) string {
	currentPath := ctx.Value("currentPath")
	if currentPath != nil {
		return currentPath.(string)
	}
	return ""
}

func getEmail(ctx context.Context) string {
	email := ctx.Value("user")
	if email != nil {
		return ctx.Value("user").(string)
	}
	return ""
}

func getIsAuthenticated(ctx context.Context) bool {
	isAuthed := ctx.Value("authenticated")
	if isAuthed == nil {
		return false
	}
	return isAuthed.(bool)
}

func getEmailInitial(email string) string {
	return strings.ToUpper(email[:1])
}

templ Header() {
	<header>
		<div class="header-inner">
			<a href="/" id="main-link">
				<span>
					@Icon("logo")
				</span>
				Newser
			</a>
			<div class="header-container">
				if getIsAuthenticated(ctx) {
					<h1 class="header-title">{ util.GetPageTitle(ctx) }</h1>
				}
				@Flash()
			</div>
			<nav aria-label="Main">
				<ul>
					if getIsAuthenticated(ctx) == false {
						<li><a href="/auth/login">Log In</a></li>
						<li><a href="/auth/signup">Sign Up</a></li>
					} else {
						@UserDropdown(getEmail(ctx))
					}
				</ul>
			</nav>
		</div>
	</header>
}

templ UserDropdown (email string) {
	<li class="dropdown">
		// .avatar == .dropdown__title (modern css walkthrough)
		<button
			class="avatar"
			type="button"
			aria-expanded="false"
			aria-controls="user-dropdown"
		>
			{ getEmailInitial(email) }
		</button>
		<ul class="dropdown__menu" id="user-dropdown">
			<li>
				<a href="/auth/profile">{ email }</a>
			</li>
			<li>
				<form action="/auth/logout" method="post">
					<button type="submit">Log Out</button>
				</form>
			</li>
		</ul>
	</li>
}
